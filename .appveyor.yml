version: "{build}"

# x64 is a CMake-compatible solution platform name.
# This allows us to pass %PLATFORM% to CMake -A.
platform:
  - x64

# Environment variables:
# - Set VS version and configuration
# - Add Qt path
# - Add Python3 path
# - on Debug exclude tests which would take too much time
environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      configuration: Debug
      QTDIR:  "C:\\Qt\\5.9.1\\msvc2015_64"
      PYTHON: "C:\\Python36-x64"
      EXCLUDETESTS: solver
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      configuration: Release
      QTDIR:  "C:\\Qt\\5.9.1\\msvc2015_64"
      PYTHON: "C:\\Python36-x64"
      EXCLUDETESTS:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      configuration: Debug
      QTDIR:  "C:\\Qt\\5.9.1\\msvc2017_64"
      PYTHON: "C:\\Python36-x64"
      EXCLUDETESTS: solver
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      configuration: Release
      QTDIR:  "C:\\Qt\\5.9.1\\msvc2017_64"
      PYTHON: "C:\\Python36-x64"
      EXCLUDETESTS:

# Cmake will autodetect the compiler, but we set the arch
before_build:
  - set PATH=%QTDIR%\bin;%PYTHON%;%PATH%
  - set CXXFLAGS=%additional_flags%
  - cmake -H. -BBuild -A%PLATFORM% -DUSER_PATH_QT=%QTDIR%

# Build with MSBuild
build:
  project: Build\spirit.sln # path to Visual Studio solution or project
  parallel: true            # enable MSBuild parallel builds
  verbosity: normal         # MSBuild verbosity level {quiet|minimal|normal|detailed}

install:
  - "%PYTHON%/Scripts/pip.exe install numpy"

test_script:
  - cd Build
  - ctest --output-on-failure -C %CONFIGURATION% -E %EXCLUDETESTS%